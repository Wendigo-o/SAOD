• Время жизни объекта в С++: Динамические объекты нужно удалять вручную. Причём если не удалять локальные динамические объекты с помощью оператора delete в каком-либо методе, то при выходе из этого метода данные локальные объект останутся «висеть»  на просторах памяти (утечка памяти).
• Время жизни объекта в С#: Появляются при выполнении new. Сборщик мусора автоматически удаляет такие объекты, если на них нет ссылок.
• Какие случаи неявного копирования объектов существуют в C++? (их 2): 1)При передаче параметров в различные методы — вызывается конструктор неявного копирования 2)При использовании return в методе — возвращений значений (параметров) из метода.
• В каком порядке создаются составные объекты (потомки или агрегаты в C++)? Для начала создаются потомок, потом поле — он же агрегат. Удаляются соответственно в обратном порядке.
• Для чего предназначен интерфейс IDisposable в C#? Для освобождения неуправляемой памяти
• Будет ли вызван Dispose по завершению блока using, если на объект, указанный в using имеется еще одна ссылка?  Да, будет
• Как вызвать конструктор предка с параметром в C++? У конструктора потомка написать: Parent(parameters)
• Как вызвать конструктор предка с параметром в C#? С помощью ключевого слова: base(параметр) в конструкторе производного класса
• Как вызвать конструктор члена класса с параметром? Конструктор(тип_данных параметр)
• Опишите различие в понятии ссылка в смысле C++ и в смысле .Net.: В .Net могут быть NULL, а в C++ инициализируются существующей переменной. В С++ узнать о наличии ссылки на объект нельзя в .Net — можно. Также в C++ нельзя изменить объект на который ссылается ссылка. Различаются способы объявления. 
• Как объявить и использовать шаблон класса?
template<typename T> class SomeClassName{ T someValue; }
SomeClassName<AnotherType> someName;
